name: Publish and deploy to VPS

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
  workflow_dispatch:
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ secrets.REPO_OWNER }}/griffon
  DB_HOST: ${{secrets.DB_HOST}}
  YARN_ENABLE_IMMUTABLE_INSTALLS: false
jobs:
  install_dependencies:
    name: Install dependencies
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Enable Corepack
        run: corepack enable

      - name: Setup Yarn
        run: corepack prepare yarn@4.6.0 --activate
      
      - name: Run Yarn
        run: yarn install
      
      - uses: actions/upload-artifact@v4
        with:
          # Name of the artifact to upload.
          # Optional. Default is 'artifact'
          name: Node_modules
      
          # A file, directory or wildcard pattern that describes what to upload
          # Required.
          path: |
            node_modules
            packages
            apps/web/node_modules
            apps/api/node_modules
  push_backend:
    needs: [install_dependencies]
    name: Backend image
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: login
        run: |
          echo ${{ secrets.GH_SECRET }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - uses: actions/download-artifact@v4
      - name: Build and push
        run: |
          docker build  --build-arg DB_HOST=${{secrets.DB_HOST}} --build-arg JWT_SECRET=${{secrets.JWT_SECRET}} --build-arg PORT=${{secrets.PORT}}  --build-arg DB_PORT=${{secrets.DB_PORT}} --build-arg DB_USERNAME=${{secrets.DB_USERNAME}} --build-arg DB_PASSWORD=${{secrets.DB_PASSWORD}} --build-arg DB_NAME=${{secrets.DB_NAME}} --build-arg JWT_EXPIRATION=${{secrets.JWT_EXPIRATION}}  -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-api ./apps/api
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-api

  push_frontend:
    needs: [install_dependencies]
    name: Frontend image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Enable Corepack
        run: corepack enable

      - name: Setup Yarn
        run: corepack prepare yarn@4.6.0 --activate
      - uses: actions/download-artifact@v4
      - name: build front
        run: yarn run build
        
      - name: login
        run: |
          echo ${{ secrets.GH_SECRET }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push
        run: |
          docker build  --build-arg VITE_API_ADDRESS=${{secrets.VITE_API_ADDRESS}} -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-web ./apps/web
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-web
  deploy:
    needs: [push_backend, push_frontend]
    name: deploy image
    runs-on: ubuntu-24.04

    steps:
      - name: install ssh keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
      - name: connect and pull
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker compose up -d && exit"
      - name: cleanup
        run: rm -rf ~/.ssh
